class samplingunit {
	string groupid = "sampleunit"
	string markedobs = "_marked"
	string indid
	string dyngroupid
	string panelid
	string grouphead
	double panel0
	double panelT
}
program .set_groupid
	args x
	.dyngroupid = "`x'"
end
program .set_individualid
	args x
	.indid = "`x'"
end
program .set_panelid
	args x y z
	.panelid = "`x'"
	.panel0 = `y'
	.panelT = `z'
end
program .set_grouphead
	args x
	.grouphead = "`x'"
end
program .create
	tempfile sutmp1
	save `sutmp1'
	
	* Chech that head uniquely identifies group
	keep if `.panelid' == `.panel0'
	tempvar tmpv1
	bysort `.dyngroupid': egen `tmpv1' = total(`.grouphead')
	quietly sum `tmpv1'
	if `r(max)' > 1 {
		di "More than one group head identified in first time period"
		use `sutmp1', clear
		class exit -1
	}
	use `sutmp1', clear
	
	* Create unique group identifier for first period in panel
	capture drop `.groupid'
	tempvar alwayshead
	bysort `.indid': egen `alwayshead' = min(`.grouphead')
	gen `.groupid' = `.indid' if (`alwayshead' == 1)

	* Designate as a main group member
	gen `.markedobs' = 1 if (`alwayshead' == 1)
	label variable `.markedobs' "Sampling unit, observation marker"
	label define markedobs_lbl 1 "Primary sample unit member"
	label variable `.markedobs' markedobs_lbl
end
program.assign_member
	args x y
	tempvar grp

	* Group id extended to non-head
	bysort `.dyngroupid': egen `grp' = max(`.groupid')
	
	* Filter by membership variables
	replace `.groupid' = `grp' if (`x' == 1)
	
	* Add mark if specified
	if "`y'" != "" {
		replace `.markedobs' = `y' if (`x' == 1)
	}

end
program .clean_panel
	tempname nperiods
	scalar nperiods = `.panelT' - `.panel0' + 1

	* Check if all group members are available for entire sample
	tempname gtmp1 gtmp2
	bysort `.indid': gen `gtmp1' = _N
	bysort `.groupid': egen `gtmp2' = min(`gtmp1')
	replace `.groupid' = . if `gtmp2' < nperiods
	
	* Check if all group members are in group for entire sample
	tempname gtmp3 gtmp4
	bysort `.indid' (`.groupid'): gen `gtmp3' = (`.groupid'[_N] == `.groupid'[1])
	bysort `.groupid': egen `gtmp4' = min(`gtmp3')
	replace `.groupid' = . if `gtmp4' == 0

	* Update marked observations
	replace `.markedobs' = . if missing(`.groupid')
end
program .tab_groups
	tempvar nsample

	bysort `.groupid': gen `nsample' = _N
	tab `nsample'
end