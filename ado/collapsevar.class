/* Class: collapsevar */

/* This class is used to attach various labels and notes to existing variables
and to identify the desired collapse command (e.g. mean or median). */

class collapsevar {
	string varname
	string vnotes
	string vlabel
	statalist cmd
	string countvar
	statalist excelname
}
program .new
	#delimit ;
	syntax varname
		[, NOTES(string)] [, LABEL(string)] [, CMD(string)]
		[, COUNTS] [, KEEPLABEL] [, COLNAME(string)];
	#delimit cr
	
	.varname = "`varlist'"
	.vnotes = "`notes'"

	tokenize `cmd'
	while ("`1'" != "") {
		.cmd.append "`1'"
		macro shift
	}
	// .cmd = "`cmd'"
	
	if "`label'" == "" {
		local lab: variable label `varlist'
		if "`lab'" != "" {
			.vlabel = "`lab'"
		}
		else {
			.vlabel = "`varlist'"
		}
	}
	else {
		.vlabel = "`label'"
	}

	if "`colname'" != "" {
		tokenize `"`colname'"', parse("|")
		local i = 1
		while ("``i''" != "") {
			local nametmp = stritrim("``i''")
			.excelname.append "`nametmp'"
			local i = `i' + 2
		}
	}
	
	if "`counts'" != "" {
		gen byte counts_`.varname' = 1 if !missing(`.varname')
		.countvar = "counts_`.varname'"
		label variable `.countvar' "# non-missing for prev col"
	}
end
program .dropmissing
	quietly drop if missing(`.varname')
end
program .collapse
	.cmd.loop_reset
	if (`.cmd.n' == 1) {
		.cmd.loop_next
		local prefix `.cmd.loop_get'
		local cstring (`prefix') `.varname'

		if "`.countvar'" != "" {
			local cstring `cstring' (rawsum) `.countvar'
		}
	}
	else if (`.cmd.n' > 1) {
		.cmd.loop_reset
		while (`.cmd.loop_next') {
			local prefix `.cmd.loop_get'
			local cstring `cstring' (`prefix') `prefix'_`.varname'

			if "`.countvar'" != "" {
				local cstring `cstring' (rawsum) `.countvar'
			}
		}
	}
	
	class exit "`cstring'"
end
program .relabel
	if (`.cmd.n' == 1) {
		label variable `.varname' "`.vlabel'"
		
		if "`.countvar'" != "" {
			label variable `.countvar' "# non-missing for prev col"
		}
	}
end
program .getnotes
	class exit "`.vnotes'"
end
program .getexcelname
	args num
	if "`num'" == "" {
		local num 1
	}

	local lab = "`.excelname.get `num''"

	if "`lab'" == "" {
		class exit "`.vlabel'"
	}
	else {
		class exit "`lab'"
	}
end
